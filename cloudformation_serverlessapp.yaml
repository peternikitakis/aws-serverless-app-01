AWSTemplateFormatVersion: "2010-09-09"

Description: Serverless AWS Banking App using S3, Lambda, and API Gateway

Resources:
  bankingS3bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: balancestatus0422

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Description: IAM Role for Lamda to Access S3
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      RoleName: LambdaexecutionRole

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.9
      Role: !GetAtt LambdaExecutionRole.Arn
      Handler: index.lambda_handler
      Code:
        ZipFile: |
          import json
          import boto3
          client = boto3.client('s3')

          def lambda_handler(event, context):
              response = client.get_object(
                  Bucket='balancestatus0422',
                  Key='balancestatus.json',
              )
              # convert from streaming data to byte
              data_byte = response['Body'].read()
              # convert from bytes to strings
              data_string = data_byte.decode("UTF-8")
              # convert from json string to dictionary
              data_dict = json.loads(data_string)

              return {
                  'statusCode': 200,
                  'body': json.dumps(data_dict),
                  'headers': {'Content-Type': 'application/json'},
              }
      Description: API Gateway Lambda S3
      Timeout: 60

  bankingRESTAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: balancestatusapi

  bankingstatusResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt bankingRESTAPI.RootResourceId
      PathPart: balanceStatus01
      RestApiId: !Ref bankingRESTAPI

  bankingstatusMethod:
  Type: "AWS::ApiGateway::Method"
  Properties:
    RestApiId: !Ref bankingRESTAPI
    ResourceId: !Ref bankingstatusResource
    HttpMethod: GET
    AuthorizationType: NONE
    Integration:
      Type: AWS
      IntegrationHttpMethod: POST
      Uri: !Sub >-
        'arn:aws:apigateway:AWS::us-east-1:lambda:path/2015-03-31/functions/${Lambdafunction.Arn}invocations'
